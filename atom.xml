<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OVTenng</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.imtt.me/"/>
  <updated>2018-11-25T07:53:54.648Z</updated>
  <id>https://blog.imtt.me/</id>
  
  <author>
    <name>ovtenng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习之PCA与梯度上升法</title>
    <link href="https://blog.imtt.me/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8BPCA%E4%B8%8E%E6%A2%AF%E5%BA%A6%E4%B8%8A%E5%8D%87%E6%B3%95/"/>
    <id>https://blog.imtt.me/机器学习/机器学习之PCA与梯度上升法/</id>
    <published>2018-11-21T06:04:13.000Z</published>
    <updated>2018-11-25T07:53:54.648Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;主成分分析（Principle Component Analysis，简称：PCA）是一种非监督学习的机器算法，主要用于数据的降维。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习算法" scheme="https://blog.imtt.me/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://blog.imtt.me/tags/Python/"/>
    
      <category term="机器学习" scheme="https://blog.imtt.me/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="算法" scheme="https://blog.imtt.me/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Scikit Learn" scheme="https://blog.imtt.me/tags/Scikit-Learn/"/>
    
  </entry>
  
  <entry>
    <title>机器学习之梯度下降法与线性回归</title>
    <link href="https://blog.imtt.me/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95%E4%B8%8E%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    <id>https://blog.imtt.me/机器学习/机器学习之梯度下降法与线性回归/</id>
    <published>2018-11-13T07:24:55.000Z</published>
    <updated>2018-11-22T06:40:15.069Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;梯度下降法不是一个机器学习算法，而是一种基于搜索的最优化方法，用于最小化一个效用函数。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习算法" scheme="https://blog.imtt.me/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://blog.imtt.me/tags/Python/"/>
    
      <category term="机器学习" scheme="https://blog.imtt.me/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="算法" scheme="https://blog.imtt.me/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Scikit Learn" scheme="https://blog.imtt.me/tags/Scikit-Learn/"/>
    
  </entry>
  
  <entry>
    <title>机器学习之线性回归法</title>
    <link href="https://blog.imtt.me/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E6%B3%95/"/>
    <id>https://blog.imtt.me/机器学习/机器学习之线性回归法/</id>
    <published>2018-10-31T05:46:35.000Z</published>
    <updated>2018-11-02T09:49:09.274Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在统计学中，线性回归（Linear regression）是利用称为线性回归方程的最小二乘函数对一个或多个自变量和因变量之间关系进行建模的一种回归分析&lt;sup&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_regression&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[维基百科]&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习算法" scheme="https://blog.imtt.me/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://blog.imtt.me/tags/Python/"/>
    
      <category term="机器学习" scheme="https://blog.imtt.me/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="算法" scheme="https://blog.imtt.me/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Scikit Learn" scheme="https://blog.imtt.me/tags/Scikit-Learn/"/>
    
  </entry>
  
  <entry>
    <title>机器学习之数据归一化</title>
    <link href="https://blog.imtt.me/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%95%B0%E6%8D%AE%E5%BD%92%E4%B8%80%E5%8C%96/"/>
    <id>https://blog.imtt.me/机器学习/机器学习之数据归一化/</id>
    <published>2018-10-27T05:21:48.000Z</published>
    <updated>2018-10-27T08:59:04.022Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;机器学习中，数据归一化是非常重要，如果不进行数据归一化，可能会导致模型坏掉或者训练出一个奇怪的模型。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习算法" scheme="https://blog.imtt.me/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://blog.imtt.me/tags/Python/"/>
    
      <category term="机器学习" scheme="https://blog.imtt.me/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="算法" scheme="https://blog.imtt.me/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Scikit Learn" scheme="https://blog.imtt.me/tags/Scikit-Learn/"/>
    
  </entry>
  
  <entry>
    <title>机器学习之 K-近邻算法</title>
    <link href="https://blog.imtt.me/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8BK%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95/"/>
    <id>https://blog.imtt.me/机器学习/机器学习之K近邻算法/</id>
    <published>2018-10-24T05:44:07.000Z</published>
    <updated>2018-10-31T05:49:31.218Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;k-近邻算法通过测量不同特征值之间的距离方法进行分类。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习算法" scheme="https://blog.imtt.me/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://blog.imtt.me/tags/Python/"/>
    
      <category term="机器学习" scheme="https://blog.imtt.me/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="算法" scheme="https://blog.imtt.me/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Scikit Learn" scheme="https://blog.imtt.me/tags/Scikit-Learn/"/>
    
  </entry>
  
  <entry>
    <title>Spring 事务处理</title>
    <link href="https://blog.imtt.me/Spring/Spring-%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/"/>
    <id>https://blog.imtt.me/Spring/Spring-事务处理/</id>
    <published>2018-08-01T02:51:37.000Z</published>
    <updated>2018-09-10T13:36:48.742Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Spring 支持编程式事务处理和声明式事务处理。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring" scheme="https://blog.imtt.me/categories/Spring/"/>
    
    
      <category term="Java" scheme="https://blog.imtt.me/tags/Java/"/>
    
      <category term="事务处理" scheme="https://blog.imtt.me/tags/%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/"/>
    
      <category term="Spring" scheme="https://blog.imtt.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>JDBC 事务处理</title>
    <link href="https://blog.imtt.me/JDBC-%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/"/>
    <id>https://blog.imtt.me/JDBC-事务处理/</id>
    <published>2018-07-26T01:02:18.000Z</published>
    <updated>2018-09-10T14:02:04.881Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;JDBC 的事务处理是基于 &lt;code&gt;Connection&lt;/code&gt; 接口的，通过 &lt;code&gt;Connection&lt;/code&gt; 对象进行事务管理。&lt;/p&gt;
    
    </summary>
    
      <category term="JDBC" scheme="https://blog.imtt.me/categories/JDBC/"/>
    
    
      <category term="JDBC" scheme="https://blog.imtt.me/tags/JDBC/"/>
    
      <category term="Java" scheme="https://blog.imtt.me/tags/Java/"/>
    
      <category term="事务处理" scheme="https://blog.imtt.me/tags/%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>JDBC Template</title>
    <link href="https://blog.imtt.me/JDBC-Template/"/>
    <id>https://blog.imtt.me/JDBC-Template/</id>
    <published>2018-07-24T08:36:34.000Z</published>
    <updated>2018-09-10T13:34:59.834Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Spring 在 JDBC API 之上提供了 JDBC Template 组件简化了持久化操作。&lt;/p&gt;
    
    </summary>
    
      <category term="JDBC" scheme="https://blog.imtt.me/categories/JDBC/"/>
    
    
      <category term="JDBC" scheme="https://blog.imtt.me/tags/JDBC/"/>
    
      <category term="Java" scheme="https://blog.imtt.me/tags/Java/"/>
    
      <category term="Spring" scheme="https://blog.imtt.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>基于 AspectJ 的 AOP 开发</title>
    <link href="https://blog.imtt.me/Spring/%E5%9F%BA%E4%BA%8E-AspectJ-%E7%9A%84-AOP-%E5%BC%80%E5%8F%91/"/>
    <id>https://blog.imtt.me/Spring/基于-AspectJ-的-AOP-开发/</id>
    <published>2018-07-20T08:00:33.000Z</published>
    <updated>2018-09-10T13:38:08.520Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;AspectJ 是一个基于 Java 语言的 AOP 框架。Spring 2.0 以后新增了对 AspectJ 切点表达式支持，并且建议使用 AspectJ 方式来开发 AOP。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring" scheme="https://blog.imtt.me/categories/Spring/"/>
    
    
      <category term="Java" scheme="https://blog.imtt.me/tags/Java/"/>
    
      <category term="Spring" scheme="https://blog.imtt.me/tags/Spring/"/>
    
      <category term="AspectJ" scheme="https://blog.imtt.me/tags/AspectJ/"/>
    
      <category term="AOP" scheme="https://blog.imtt.me/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>Spring 面向切面编程 AOP</title>
    <link href="https://blog.imtt.me/Spring/Spring-%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B-AOP/"/>
    <id>https://blog.imtt.me/Spring/Spring-面向切面编程-AOP/</id>
    <published>2018-07-17T08:18:42.000Z</published>
    <updated>2018-11-27T08:59:22.071Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Spring AOP 使用纯 Java 实现，不需要专门的编译过程和类加载器，在运行期通过代理方式向目标类织入增强代码 。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring" scheme="https://blog.imtt.me/categories/Spring/"/>
    
    
      <category term="Java" scheme="https://blog.imtt.me/tags/Java/"/>
    
      <category term="Spring" scheme="https://blog.imtt.me/tags/Spring/"/>
    
      <category term="AOP" scheme="https://blog.imtt.me/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>JDK 动态代理和 CGLIB 动态代理</title>
    <link href="https://blog.imtt.me/JDK-%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8C-CGLIB-%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"/>
    <id>https://blog.imtt.me/JDK-动态代理和-CGLIB-动态代理/</id>
    <published>2018-07-14T11:10:02.000Z</published>
    <updated>2018-11-27T08:59:44.059Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;AOP（Aspect Oriented Programing）即面向切面编程，采取横向抽取机制，取代了传统纵向继承体系重复性代码，应用在性能监视、事务管理、安全检查、缓存。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://blog.imtt.me/categories/Java/"/>
    
    
      <category term="Java" scheme="https://blog.imtt.me/tags/Java/"/>
    
      <category term="动态代理" scheme="https://blog.imtt.me/tags/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"/>
    
      <category term="CGLIB" scheme="https://blog.imtt.me/tags/CGLIB/"/>
    
  </entry>
  
  <entry>
    <title>Spring Bean 在应用上下文中的生命周期</title>
    <link href="https://blog.imtt.me/Spring/Spring-Bean-%E5%9C%A8%E5%BA%94%E7%94%A8%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%AD%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>https://blog.imtt.me/Spring/Spring-Bean-在应用上下文中的生命周期/</id>
    <published>2018-07-12T07:05:48.000Z</published>
    <updated>2018-11-26T14:08:47.730Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Spring 中 Bean 的生命周期由多个特定的生命阶段组成，每个阶段都能对 Bean 进行控制。本文中的生命周期为 &lt;strong&gt;ApplicationContext 中 Bean 的生命周期&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring" scheme="https://blog.imtt.me/categories/Spring/"/>
    
    
      <category term="Java" scheme="https://blog.imtt.me/tags/Java/"/>
    
      <category term="Spring" scheme="https://blog.imtt.me/tags/Spring/"/>
    
      <category term="生命周期" scheme="https://blog.imtt.me/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>Spring Bean 管理</title>
    <link href="https://blog.imtt.me/Spring/Spring-Bean-%E7%AE%A1%E7%90%86/"/>
    <id>https://blog.imtt.me/Spring/Spring-Bean-管理/</id>
    <published>2018-07-08T08:12:29.000Z</published>
    <updated>2018-11-26T07:46:16.904Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在 Spring 中通过配置文件描述 Bean 和 Bean 之间的依赖关系，利用 Java 语言的反射功能实例化 Bean 并建立 Bean 之间的依赖关系。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring" scheme="https://blog.imtt.me/categories/Spring/"/>
    
    
      <category term="Java" scheme="https://blog.imtt.me/tags/Java/"/>
    
      <category term="Spring" scheme="https://blog.imtt.me/tags/Spring/"/>
    
      <category term="注解" scheme="https://blog.imtt.me/tags/%E6%B3%A8%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 事务处理</title>
    <link href="https://blog.imtt.me/MySQL/MySQL-%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/"/>
    <id>https://blog.imtt.me/MySQL/MySQL-事务处理/</id>
    <published>2018-07-05T10:16:00.000Z</published>
    <updated>2018-09-10T13:36:06.768Z</updated>
    
    <summary type="html">
    
      &lt;p&gt; 事务一般特指数据库事务（Database Transaction），是指作为一个程序执行单元执行的一系列操作，要么完全执行，要么完全不执行。 &lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://blog.imtt.me/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="https://blog.imtt.me/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>JSP 内置对象</title>
    <link href="https://blog.imtt.me/JSP-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/"/>
    <id>https://blog.imtt.me/JSP-内置对象/</id>
    <published>2018-06-30T01:14:00.000Z</published>
    <updated>2018-09-10T13:35:28.315Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;JSP 内置对象（又称隐含对象）共有9个，不需要预先声明就可以在脚本代码和表达式中使用。&lt;/p&gt;
    
    </summary>
    
      <category term="Java Web" scheme="https://blog.imtt.me/categories/Java-Web/"/>
    
    
      <category term="Java" scheme="https://blog.imtt.me/tags/Java/"/>
    
      <category term="JSP" scheme="https://blog.imtt.me/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>Flask 中使用 WTForms 进行表单验证</title>
    <link href="https://blog.imtt.me/Flask/Flask-%E4%B8%AD%E4%BD%BF%E7%94%A8-WTForms-%E8%BF%9B%E8%A1%8C%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"/>
    <id>https://blog.imtt.me/Flask/Flask-中使用-WTForms-进行表单验证/</id>
    <published>2018-05-27T02:43:58.000Z</published>
    <updated>2018-06-07T04:16:06.829Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;很多时候需要对浏览器提交的表单数据进行限制或验证，在 Flask 中使用 &lt;a href=&quot;https://wtforms.readthedocs.io/en/stable/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WTForms&lt;/a&gt; 拓展模块是一个很好的选择。&lt;/p&gt;
&lt;p&gt;只需通过 pip 安装：&lt;code&gt;pip install WTForms&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Flask" scheme="https://blog.imtt.me/categories/Flask/"/>
    
    
      <category term="Python" scheme="https://blog.imtt.me/tags/Python/"/>
    
      <category term="Flask" scheme="https://blog.imtt.me/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>Flask 使用 request 获取请求参数</title>
    <link href="https://blog.imtt.me/Flask/Flask-%E4%BD%BF%E7%94%A8-request-%E8%8E%B7%E5%8F%96%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/"/>
    <id>https://blog.imtt.me/Flask/Flask-使用-request-获取请求参数/</id>
    <published>2018-05-24T02:14:59.000Z</published>
    <updated>2018-06-04T02:57:18.682Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Flask 从客户端收到请求时，要让视图函数能获取参数，有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将其作为参数传入视图函数，&lt;/li&gt;
&lt;li&gt;使用上下文全局变量 request。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Flask" scheme="https://blog.imtt.me/categories/Flask/"/>
    
    
      <category term="Python" scheme="https://blog.imtt.me/tags/Python/"/>
    
      <category term="Flask" scheme="https://blog.imtt.me/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>Flask 使用 BluePrint 注册视图函数</title>
    <link href="https://blog.imtt.me/Flask/Flask-%E4%BD%BF%E7%94%A8-BluePrint-%E6%B3%A8%E5%86%8C%E8%A7%86%E5%9B%BE%E5%87%BD%E6%95%B0/"/>
    <id>https://blog.imtt.me/Flask/Flask-使用-BluePrint-注册视图函数/</id>
    <published>2018-05-17T11:13:43.000Z</published>
    <updated>2018-06-04T02:57:13.687Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Flask 中的 Blueprint（蓝图）是什么？&lt;a href=&quot;http://flask.pocoo.org/docs/1.0/blueprints/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;的解释是「Flask uses a concept of &lt;em&gt;blueprints&lt;/em&gt; for making application components and supporting common patterns within an application or across applications. Blueprints can greatly simplify how large applications work and provide a central means for Flask extensions to register operations on applications. 」。但是，具体到代码中是怎样的呢？&lt;/p&gt;
    
    </summary>
    
      <category term="Flask" scheme="https://blog.imtt.me/categories/Flask/"/>
    
    
      <category term="Python" scheme="https://blog.imtt.me/tags/Python/"/>
    
      <category term="Flask" scheme="https://blog.imtt.me/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>Flask 中的唯一 URL 原则</title>
    <link href="https://blog.imtt.me/Flask/Flask-%E4%B8%AD%E7%9A%84%E5%94%AF%E4%B8%80-URL-%E5%8E%9F%E5%88%99/"/>
    <id>https://blog.imtt.me/Flask/Flask-中的唯一-URL-原则/</id>
    <published>2018-05-05T11:05:43.000Z</published>
    <updated>2018-10-24T14:23:24.518Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;保证 URL 的唯一性，有助于避免搜索引擎索引同一个页面两次。&lt;/p&gt;
    
    </summary>
    
      <category term="Flask" scheme="https://blog.imtt.me/categories/Flask/"/>
    
    
      <category term="Python" scheme="https://blog.imtt.me/tags/Python/"/>
    
      <category term="Flask" scheme="https://blog.imtt.me/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 中的 B-Tree 索引和 Hash 索引</title>
    <link href="https://blog.imtt.me/MySQL/MySQL-%E4%B8%AD%E7%9A%84-B-Tree-%E7%B4%A2%E5%BC%95%E5%92%8C-Hash-%E7%B4%A2%E5%BC%95/"/>
    <id>https://blog.imtt.me/MySQL/MySQL-中的-B-Tree-索引和-Hash-索引/</id>
    <published>2018-04-26T02:07:24.000Z</published>
    <updated>2018-05-26T02:46:03.334Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;数据库学习笔记&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;索引告诉了存储引擎如何快速找到需要存储的数据。&lt;/p&gt;
&lt;p&gt;MySQL 支持的常用索引为：B-Tree 索引和 Hash 索引。&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://blog.imtt.me/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="https://blog.imtt.me/tags/MySQL/"/>
    
  </entry>
  
</feed>
