<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TyroTalk</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tyrotalk.com/"/>
  <updated>2018-04-18T06:12:56.185Z</updated>
  <id>https://tyrotalk.com/</id>
  
  <author>
    <name>TuTeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django 内置模型字段类型</title>
    <link href="https://tyrotalk.com/2018/01/07/Django-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9E%8B%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%9E%8B.html/"/>
    <id>https://tyrotalk.com/2018/01/07/Django-内置模型字段类型.html/</id>
    <published>2018-01-07T11:42:35.000Z</published>
    <updated>2018-04-18T06:12:56.185Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Django 模型是使用 Python 代码对数据库中数据的描述，是数据的结构，等效于 SQL 中的 CREATE TABLE 语句。&lt;/p&gt;
&lt;p&gt;定义模型时，使用一个 Python 类（&lt;code&gt;django.db.models.Model&lt;/code&gt; 的子类）表示一个模型，模型中的一个属性对应数据库中表的列，属性名对应列的名称，字段类型（如 &lt;code&gt;CharField&lt;/code&gt; ）对应数据库列的类型（如 &lt;code&gt;varchar&lt;/code&gt;）。&lt;/p&gt;
    
    </summary>
    
      <category term="Django" scheme="https://tyrotalk.com/categories/Django/"/>
    
    
      <category term="Django" scheme="https://tyrotalk.com/tags/Django/"/>
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Django 注册和登陆功能实现</title>
    <link href="https://tyrotalk.com/2017/12/30/Django-%E6%B3%A8%E5%86%8C%E5%92%8C%E7%99%BB%E9%99%86%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0.html/"/>
    <id>https://tyrotalk.com/2017/12/30/Django-注册和登陆功能实现.html/</id>
    <published>2017-12-30T06:05:51.000Z</published>
    <updated>2018-04-12T10:09:08.512Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Django 提供了用户身份验证机制，可实现注册和登录功能。&lt;/p&gt;
    
    </summary>
    
      <category term="Django" scheme="https://tyrotalk.com/categories/Django/"/>
    
    
      <category term="Django" scheme="https://tyrotalk.com/tags/Django/"/>
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Django 配置 Mysql 数据库</title>
    <link href="https://tyrotalk.com/2017/12/18/Django-%E9%85%8D%E7%BD%AE-Mysql-%E6%95%B0%E6%8D%AE%E5%BA%93.html/"/>
    <id>https://tyrotalk.com/2017/12/18/Django-配置-Mysql-数据库.html/</id>
    <published>2017-12-18T08:48:41.000Z</published>
    <updated>2018-04-12T10:09:00.240Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Django 内置 SQLite 作为默认数据库，可以更改为其它数据库，如：postgresql、mysql、oracle。这里使用 mysql。&lt;/p&gt;
    
    </summary>
    
      <category term="Django" scheme="https://tyrotalk.com/categories/Django/"/>
    
    
      <category term="Django" scheme="https://tyrotalk.com/tags/Django/"/>
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="Mysql" scheme="https://tyrotalk.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>使用 reuqests 爬取豆瓣数据书籍 URL</title>
    <link href="https://tyrotalk.com/2017/10/10/%E4%BD%BF%E7%94%A8-reuqests-%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E6%95%B0%E6%8D%AE%E4%B9%A6%E7%B1%8D-URL.html/"/>
    <id>https://tyrotalk.com/2017/10/10/使用-reuqests-爬取豆瓣数据书籍-URL.html/</id>
    <published>2017-10-10T05:23:01.000Z</published>
    <updated>2018-04-18T10:16:24.196Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;使用 requests 库爬取豆瓣读书中所有书籍的 URL，并将其存储到 Mysql 中。&lt;br&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="爬虫" scheme="https://tyrotalk.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requests" scheme="https://tyrotalk.com/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 简介及 Python 连接数据库</title>
    <link href="https://tyrotalk.com/2017/10/02/Mysql-%E7%AE%80%E4%BB%8B%E5%8F%8A-Python-%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93.html/"/>
    <id>https://tyrotalk.com/2017/10/02/Mysql-简介及-Python-连接数据库.html/</id>
    <published>2017-10-02T01:36:34.000Z</published>
    <updated>2018-04-18T09:29:25.349Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;MySQL 是一种 DBMS，即它是一种数据库软件。&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="Mysql" scheme="https://tyrotalk.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Python 数据结构：二叉搜索树</title>
    <link href="https://tyrotalk.com/2017/09/28/Python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%9A%E6%A0%91.html/"/>
    <id>https://tyrotalk.com/2017/09/28/Python-数据结构：树.html/</id>
    <published>2017-09-28T00:17:28.000Z</published>
    <updated>2018-04-23T11:17:14.518Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;树是一种抽象数据类型，用来模拟具有树状结构性质的数据集合。&lt;/p&gt;
&lt;img alt=&quot;图片说明&quot; class=&quot;class1 class2&quot; src=&quot;http://ot2o5t4xh.bkt.clouddn.com/static/images/Python-数据结构：树/tree.png&quot;&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="数据结构" scheme="https://tyrotalk.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="树" scheme="https://tyrotalk.com/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>SQL 学习笔记</title>
    <link href="https://tyrotalk.com/2017/09/23/SQL-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html/"/>
    <id>https://tyrotalk.com/2017/09/23/SQL-学习笔记.html/</id>
    <published>2017-09-23T05:18:58.000Z</published>
    <updated>2018-04-22T03:00:00.672Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.ituring.com.cn/book/1880&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SQL基础教程（第2版）&lt;/a&gt;学习笔记。&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="SQL" scheme="https://tyrotalk.com/tags/SQL/"/>
    
      <category term="数据库" scheme="https://tyrotalk.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>初识 Requests 库</title>
    <link href="https://tyrotalk.com/2017/09/16/%E5%88%9D%E8%AF%86-Requests-%E5%BA%93.html/"/>
    <id>https://tyrotalk.com/2017/09/16/初识-Requests-库.html/</id>
    <published>2017-09-16T07:06:21.000Z</published>
    <updated>2018-04-18T09:30:11.963Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Requests 库是一个处理复杂 HTTP 请求、cookie、header 等内容的 Python 第三方库。&lt;/p&gt;
    
    </summary>
    
      <category term="Python 库" scheme="https://tyrotalk.com/categories/Python-%E5%BA%93/"/>
    
    
      <category term="python 库" scheme="https://tyrotalk.com/tags/python-%E5%BA%93/"/>
    
      <category term="爬虫" scheme="https://tyrotalk.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Requests" scheme="https://tyrotalk.com/tags/Requests/"/>
    
  </entry>
  
  <entry>
    <title>Python 数据结构：列表</title>
    <link href="https://tyrotalk.com/2017/09/10/Python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%9A%E5%88%97%E8%A1%A8.html/"/>
    <id>https://tyrotalk.com/2017/09/10/Python-数据结构：列表.html/</id>
    <published>2017-09-10T01:15:15.000Z</published>
    <updated>2018-04-18T09:25:55.643Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;列表支持对线性集合的任何位置的项进行操作。对列表的操作主要有三类：基于索引的操作、基于内容的操作、基于位置的操作。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="数据结构" scheme="https://tyrotalk.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="列表" scheme="https://tyrotalk.com/tags/%E5%88%97%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>BeautifulSoup 使用</title>
    <link href="https://tyrotalk.com/2017/09/07/BeautifulSoup-%E4%BD%BF%E7%94%A8.html/"/>
    <id>https://tyrotalk.com/2017/09/07/BeautifulSoup-使用.html/</id>
    <published>2017-09-07T01:32:19.000Z</published>
    <updated>2018-04-18T09:21:41.125Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Beautiful Soup是一个Python包，功能包括解析HTML、XML文档、修复含有未闭合标签等错误的文档，通过定位 HTML 标签来格式化和组织复杂的网络信息。&lt;br&gt;
    
    </summary>
    
      <category term="Python 库" scheme="https://tyrotalk.com/categories/Python-%E5%BA%93/"/>
    
    
      <category term="BeautifulSoup" scheme="https://tyrotalk.com/tags/BeautifulSoup/"/>
    
      <category term="python 库" scheme="https://tyrotalk.com/tags/python-%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Python 数据结构：优先队列</title>
    <link href="https://tyrotalk.com/2017/08/26/Python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%9A%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97.html/"/>
    <id>https://tyrotalk.com/2017/08/26/Python-数据结构：优先队列.html/</id>
    <published>2017-08-26T00:58:08.000Z</published>
    <updated>2018-04-18T01:37:55.488Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;优先队列是一种特殊的队列类型，其中具有最高优先级的项会最先弹出，相同优先级的项按照 FIFO 的顺序弹出。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="数据结构" scheme="https://tyrotalk.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="优先队列" scheme="https://tyrotalk.com/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Python 数据结构：队列</title>
    <link href="https://tyrotalk.com/2017/08/23/Python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%9A%E9%98%9F%E5%88%97.html/"/>
    <id>https://tyrotalk.com/2017/08/23/Python-数据结构：队列.html/</id>
    <published>2017-08-23T00:46:52.000Z</published>
    <updated>2018-04-18T09:24:01.972Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;队列是线性的集合，遵从先进先出（FIFO）的协议。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="数据结构" scheme="https://tyrotalk.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="队列" scheme="https://tyrotalk.com/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Python 数据结构：栈</title>
    <link href="https://tyrotalk.com/2017/08/19/Python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%9A%E6%A0%88.html/"/>
    <id>https://tyrotalk.com/2017/08/19/Python-数据结构：栈.html/</id>
    <published>2017-08-19T02:02:54.000Z</published>
    <updated>2018-04-18T09:23:49.969Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;栈是线性的集合，遵从后进先出（LIFO）的协议。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="数据结构" scheme="https://tyrotalk.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="栈" scheme="https://tyrotalk.com/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 数据结构：双链表</title>
    <link href="https://tyrotalk.com/2017/08/13/Python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%9A%E5%8F%8C%E9%93%BE%E8%A1%A8.html/"/>
    <id>https://tyrotalk.com/2017/08/13/Python-数据结构：双链表.html/</id>
    <published>2017-08-13T02:48:15.000Z</published>
    <updated>2018-04-18T09:23:07.465Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;单链表包含了两个方向的链接，能从给定节点移动到前一个节点且能直接移动到最后一个节点。&lt;br&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="数据结构" scheme="https://tyrotalk.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Python 数据结构：单链表</title>
    <link href="https://tyrotalk.com/2017/08/11/Python-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%9A%E5%8D%95%E9%93%BE%E8%A1%A8.html/"/>
    <id>https://tyrotalk.com/2017/08/11/Python-数据结构：单链表.html/</id>
    <published>2017-08-11T01:37:41.000Z</published>
    <updated>2018-04-18T09:23:15.144Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;单链表是链表的一种，其链接方向是单向的，对链表的访问要通过从头部开始，依序往下读取。&lt;br&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="数据结构" scheme="https://tyrotalk.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>算法：无向图</title>
    <link href="https://tyrotalk.com/2017/07/30/%E7%AE%97%E6%B3%95%EF%BC%9A%E6%97%A0%E5%90%91%E5%9B%BE.html/"/>
    <id>https://tyrotalk.com/2017/07/30/算法：无向图.html/</id>
    <published>2017-07-30T03:23:53.000Z</published>
    <updated>2018-04-25T01:39:14.915Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;图是由一组顶点和一组能够将两个顶点相连的边组成的。边有方向的图称为有向图，没有方向的图称为无向图。&lt;br&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="算法" scheme="https://tyrotalk.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="https://tyrotalk.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>算法：二分查找法</title>
    <link href="https://tyrotalk.com/2017/07/23/%E7%AE%97%E6%B3%95%EF%BC%9A%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%B3%95.html/"/>
    <id>https://tyrotalk.com/2017/07/23/算法：二分查找法.html/</id>
    <published>2017-07-23T02:49:06.000Z</published>
    <updated>2018-04-18T09:19:00.182Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;二分查找法。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="算法" scheme="https://tyrotalk.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="https://tyrotalk.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>算法：堆排序</title>
    <link href="https://tyrotalk.com/2017/07/17/%E7%AE%97%E6%B3%95%EF%BC%9A%E5%A0%86%E6%8E%92%E5%BA%8F.html/"/>
    <id>https://tyrotalk.com/2017/07/17/算法：堆排序.html/</id>
    <published>2017-07-17T01:40:59.000Z</published>
    <updated>2018-04-21T01:33:37.658Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%A0%86%E6%8E%92%E5%BA%8F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;堆排序（Heapsort）&lt;/a&gt;：利用堆这种数据结构的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。&lt;br&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="算法" scheme="https://tyrotalk.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="https://tyrotalk.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>算法：高级排序算法</title>
    <link href="https://tyrotalk.com/2017/07/10/%E7%AE%97%E6%B3%95%EF%BC%9A%E9%AB%98%E7%BA%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.html/"/>
    <id>https://tyrotalk.com/2017/07/10/算法：高级排序算法.html/</id>
    <published>2017-07-10T02:53:22.000Z</published>
    <updated>2018-04-18T09:17:57.276Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本篇包括归并排序和快速排序，它们都是采用了分治法的 O(NlogN) 算法。&lt;br&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="算法" scheme="https://tyrotalk.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="https://tyrotalk.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>算法：简单排序算法</title>
    <link href="https://tyrotalk.com/2017/07/02/%E7%AE%97%E6%B3%95%EF%BC%9A%E7%AE%80%E5%8D%95%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.html/"/>
    <id>https://tyrotalk.com/2017/07/02/算法：简单排序算法.html/</id>
    <published>2017-07-02T11:54:45.000Z</published>
    <updated>2018-04-18T09:17:50.329Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;简单排序算法有三种：选择排序、插入排序和冒泡排序。都属于 O(n^2) 级别的算法。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://tyrotalk.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Python" scheme="https://tyrotalk.com/tags/Python/"/>
    
      <category term="算法" scheme="https://tyrotalk.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="https://tyrotalk.com/tags/Java/"/>
    
  </entry>
  
</feed>
